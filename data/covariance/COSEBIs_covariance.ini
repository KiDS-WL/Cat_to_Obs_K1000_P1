[DEFAULT]
CSL_PATH = ../kcap/cosmosis-standard-library/
KCAP_PATH = ../kcap/
SCALE_CUT_PATH = ../kcap/modules/scale_cuts/
INOUT_PATH = ../kids1000_chains/
COSEBIS_PATH = ../cosebis_cosmosis/
VALUES_NAME = KiDS1000_noc
SAMPLER_NAME = test
blind = A
;area_kids = 777.406 ; OmegaCam area
area_kids = 867.0 ; Healpix 4086 pixels area, going to use this as default, although it makes very little difference
NZ_FILE_NAME = K1000_NS_V1.0.0A_ugriZYJHKs_photoz_SG_mask_LF_svn_309c_2Dbins_DIRcols_Fid_blind%(blind)s.fits

redshift_name = source
RUN_NAME = %(VALUES_NAME)s_%(SAMPLER_NAME)s_%(blind)s

OUTPUT_FOLDER = %(INOUT_PATH)s/covariance/outputs/
INPUT_FOLDER  = %(INOUT_PATH)s/covariance/inputs/
INPUT_DATA    = %(INOUT_PATH)s/data/kids/
INPUT_FOLDER_NZ= %(INPUT_FOLDER)s


;COSEBIs settings
tmin_cosebis = 0.50
tmax_cosebis = 300.00
nmax_cosebis = 20
nBins_in = 5
;COSEBIs_SEC_NAME = cosebis
;WnLogPath = /home/ma/src/WnLog/
WnLogPath = %(COSEBIS_PATH)s/WnLog/

; The pipeline section contains information
; that describes the sequence of calculations
; to be done and what we want out at the end
[pipeline]
quiet = T
timing = T
debug = F
modules = sample_S8 sigma8toAs one_parameter_hmcode camb extrapolate_power correlated_dz_priors load_nz_fits source_photoz_bias linear_alignment projection cosebis

values = %(INPUT_FOLDER)s/%(VALUES_NAME)s_values.ini
priors = %(INPUT_FOLDER)s/%(VALUES_NAME)s_priors.ini

likelihoods = 
extra_output = 


[runtime]
sampler = %(SAMPLER_NAME)s

[test]
save_dir=%(OUTPUT_FOLDER)s/test_output_%(RUN_NAME)s
fatal_errors=T

[output]
filename=%(OUTPUT_FOLDER)s/output_%(RUN_NAME)s.txt
format=text


[sample_S8]
file = %(KCAP_PATH)s/utils/sample_S8.py
s8_name = S_8_input

[sigma8toAs]
file = %(KCAP_PATH)s/utils/sigma8toAs.py

[correlated_dz_priors]
file = %(KCAP_PATH)s/utils/correlated_priors.py
uncorrelated_parameters = nofz_shifts/uncorr_bias_1 nofz_shifts/uncorr_bias_2 nofz_shifts/uncorr_bias_3 nofz_shifts/uncorr_bias_4 nofz_shifts/uncorr_bias_5
output_parameters = nofz_shifts/bias_1 nofz_shifts/bias_2 nofz_shifts/bias_3 nofz_shifts/bias_4 nofz_shifts/bias_5
covariance = %(INPUT_FOLDER)s/SOM_cov_multiplied.asc


[one_parameter_hmcode]
file = %(KCAP_PATH)s/utils/one_parameter_hmcode.py
a_0 = 0.98
a_1 = -0.12

[camb]
file = %(KCAP_PATH)s/cosmosis-standard-library/boltzmann/pycamb/camb_interface.py
do_reionization = F
mode = transfer
nonlinear = pk
halofit_version = mead
neutrino_hierarchy = normal
kmax = 20.0
zmid = 2.0
nz_mid = 100
zmax = 6.0
nz = 150
background_zmax = 6.0
background_zmin = 0.0
background_nz = 6000


[extrapolate_power]
file = %(KCAP_PATH)s/cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax = 500.0

[load_nz_fits]
file = %(KCAP_PATH)s/cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(INPUT_FOLDER_NZ)s/%(NZ_FILE_NAME)s
data_sets = %(redshift_name)s

[source_photoz_bias]
file = %(KCAP_PATH)s/cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_%(redshift_name)s
bias_section = nofz_shifts
interpolation = cubic
output_deltaz = T
output_section_name = delta_z_out

[linear_alignment]
file = %(KCAP_PATH)s/cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
method = bk_corrected

[projection]
file = %(KCAP_PATH)s/cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 0.1
ell_max = 5.0e5
n_ell = 800
position-shear = F
fast-shear-shear-ia = %(redshift_name)s-%(redshift_name)s 
verbose = F
get_kernel_peaks = F

[cosebis]
file = %(COSEBIs_PATH)s/libcosebis_cov.so
theta_min = %(tmin_cosebis)s
theta_max = %(tmax_cosebis)s
n_max = %(nmax_cosebis)s
Roots_n_Norms_FolderName = %(COSEBIS_PATH)s/TLogsRootsAndNorms/
Wn_Output_FolderName = %(WnLogPath)s
Tn_Output_FolderName = %(COSEBIS_PATH)s/TpnLog/

input_section_name = shear_cl ; default is shear_cl
output_section_name = cosebis ; default is cosebis
nBins = %(nBins_in)s
; sigma_m = 0.02
sigma_m_cov_file = %(INPUT_DATA)s/multiplicative_bias/m_cov_r_1.00.ascii ;input covariance for m-bias, with the same number rows and columns as number of redshift bin pairs
sigma_e_file     = %(INPUT_DATA)s/ellipticity_dispersion/sigma_e_blind%(blind)s.ascii
;sigma_e          = 0.27150181613084834 0.26155741906042573 0.2754555314207977 0.26255199828711173 0.28129479949920244 ; mean per component, needs more than one input for some reason!!
ngal_file = %(INPUT_DATA)s/number_density/ngal_blind%(blind)s.ascii
;ngal_effective = 0.51074433 1.02399271 1.63198949 1.12742338 1.17914436 ; for healpix area
Area = %(area_kids)s ; in deg^2 has to be a float number, doesn't recognise int
Cov_name = %(OUTPUT_FOLDER)s/Covariance_blind%(blind)s_nMaximum_%(nmax_cosebis)s_%(theta_min)s_%(theta_max)s_nBins%(nBins_in)s

; the output covariances have this as their starting name, but different suffixes at the end. Use the one with _NoiseJustForNoise.
calculateCov = 1 ; calculate covariance if not 0
OnlyBmodes_Cov = 0 ; (optional, default=0) If set to 1 then only calculated the B-mode covariance
input_nPair_files_suffix = %(INPUT_DATA)s/xipm/XI_V1_4000
input_nPair_files_suffix_end = .ascii 
Athena_input = 0 ; 0 assumes the input is not athena no correction for the noise contribution. Set to 1 for Athena
nPairs_column = 11 ; For athena it is 8, for treecorr use 11, although that is not weighted
theta_column = 1 ; For Athena and treecorr it is 1. The log-bin centre for log binning or the linear bin centre for linear binning

input_nonGaussian_Cl_cov = %(INPUT_FOLDER)s/thps_cov_kids1000_apr5_cl/thps_cov_kids1000_apr5_cl_obs_source_matrix.dat
input_nonGaussian_Cl_ell_vec = %(INPUT_FOLDER)s/input_nonGaussian_ell_vec.ascii
