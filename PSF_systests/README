21/10/2020
README for the PSF_systests subdirectory.

1. Calc_PHterms.py
This code calculates terms entering the Paulin-Henriksson systematics model given in Eqn eqn. 10 of Giblin et al. (2020).
It also calculates the error on the PH systematic contribution using Jackknife.

Arguments you can set in the code:
 - Calc_PH (True/False): whether to actually run TreeCorr & calculate the PH terms.
 - PreReadCat (True/False): whether to read in a pre-made pickled PSF catalogue to save time.
   If False it assembles the PSF catalogue from scratch using all the KiDS tile directories (slower).
   Always run it with PreReadCat set to	False the first	time, then True for subsequent runs.
 - Splitup_Fields (True/False): if True, splits observed field into Res*Res (RA,Dec) patches and uses
   these patches to calculate the Jackknife errors on the measurement.
 - Res (integer): For KiDS-1000, Res=7 (49 patches of ~20 deg^2 each seemed a good number).

 - LFver ("321"/"309b"): lensfit version used in producing the the PSF position-ellipticity catalogue.
   We used "321" for the final catalogue.
 - NorS ("N"/"S"): Use the data for the North or South KiDS fields.


2. Plot_PHterms.py
This code produces Figure 3 of Giblin et al. (2020) and also performs the chi^2 tests presented in that paper,
i.e. it checks that the induced change in chi^2 at a fiducial true cosmology that is caused by a given PSF
systematic to xi+, is some dominant to the change caused by a small increase or decrease in S_8.
Therefore it checks your PSF systematic does not bias your best-fit S_8 estimate overly.

Arguments:
 - Read_Tvalues (True/False): If False, this calculates the (delta)T_PSF/gal quantities appearing in, e.g.,
   the Paulin-Henriksson systematics model (eqn 10. Giblin+2020), from the data, per redshift bin.
   If True, it reads the pre-calculated values saved to file in order to save time on next run.
   Set to False on the first run and true on subsequent runs.
 - LFver: lensfit version. (see above).
 - Use_alpha_per_bin (True/False): alpha is the PSF leakage appearing in the Jarvis et al. (2016; eqn 3.16)
    systematics model. Note, we don't use this model in Giblin et al. (2020).
   If True, it reads an individual value of alpha for each redshift bin which were previously calculated using
   the Calc_1pt code.
   If False, it sets alpha to 0.03 for every bin (basically worst case scenario).

Notes:
  To run the chi2 tests, execute the function Investigate_chi2.
  To run these tests for different prescriptions for the PSF systematic (Paulin-Henriksson, Bacon, flux-dependent PSF residuals),
  need to change the lines beginning "delta_xip... = " in this function (around line 337)
  Calc_delta_xip_J16 = Jarvis+2016 systematic
  Calc_delta_xip_H20 = Paulin-Henriksson+2008 systematic
  Calc_delta_xip_cterms = flux-dependent PSF residual systematic
  Calc_delta_xip_Bacon = Bacon+2003 systematic

3. Calc_rho.py
This code is similar to Calc_PHterms.py in its functionality. It calculates the 5 rho statistics presented in Zuntz et al. (2017).
This code is redundant for the following reason:
In Giblin et al. (2020) we concluded that the rho stats formulism implemented in this work and others
conflated two different PSF systematics prescriptions (what we refer to as the Paulin-Henriksson model,
and the 1st order systematics model in Giblin et al.)
Thus, the results from this code did not make it into the paper.

4. Plot_rho.py
Similar to Plot_PHterms.py but focussed on the results of the redundant Calc_rho.py.
As we do not use the results of Calc_rho, Plot_rho is also a reundant code. 